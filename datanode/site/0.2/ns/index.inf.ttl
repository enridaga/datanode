@prefix :        <http://purl.org/datanode/ns/> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix dcterms:  <http://purl.org/dc/terms/> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .

:hasAttached
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "Data have attached other data for some reason"@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has attached"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :adjacent , :hasAttached , :related ;
      owl:equivalentProperty
              :hasAttached ;
      owl:inverseOf :attachedTo .

:isStandInOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is stand-in of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isStandInOf , :overlappingCapability , :isDerivationOf , :related ;
      owl:equivalentProperty
              :isStandInOf ;
      owl:inverseOf :hasStandIn .

owl:incompatibleWith
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Ontology , rdfs:Resource ;
      rdfs:range owl:Ontology , rdfs:Resource ;
      rdfs:subPropertyOf owl:incompatibleWith .

owl:backwardCompatibleWith
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Ontology , rdfs:Resource ;
      rdfs:range owl:Ontology , rdfs:Resource ;
      rdfs:subPropertyOf owl:backwardCompatibleWith .

owl:TransitiveProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , owl:TransitiveProperty , owl:ObjectProperty ;
      owl:equivalentClass owl:TransitiveProperty .

:isPartOf
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is part of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isPartOf , :related ;
      owl:equivalentProperty
              :isPartOf ;
      owl:inverseOf :hasPart .

:hasIdentifiers
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has identifiers"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :hasIdentifiers , :related , :hasSection ;
      owl:equivalentProperty
              :hasIdentifiers ;
      owl:inverseOf :identifiersOf .

:isSnapshotOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is snapshot of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :version , :isDerivationOf , :isCopyOf , :related , :isDuplicateOf , :isSnapshotOf ;
      owl:equivalentProperty
              :isSnapshotOf ;
      owl:inverseOf :hasSnapshot .

:nextVersion
      a       rdfs:Resource , rdf:Property , owl:FunctionalProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "next version"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :newerVersion , :version , :related , :nextVersion ;
      owl:equivalentProperty
              :nextVersion ;
      owl:inverseOf :previousVersion .

:disjointPortion
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "disjoint portion"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :differentCapability , :disjointPortion , :adjacent , :disjointPart , :differentPopulation , :related ;
      owl:equivalentProperty
              :disjointPortion .

:hasDatatypes
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Relates data to the properties used."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has datatypes"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDatatypes , :related , :hasVocabulary ;
      owl:equivalentProperty
              :hasDatatypes ;
      owl:inverseOf :datatypesOf .

owl:Nothing
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf owl:Thing , rdfs:Resource , owl:Nothing ;
      owl:equivalentClass owl:Nothing .

rdfs:Literal
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdfs:Literal ;
      owl:equivalentClass rdfs:Literal .

:hasDuplicate
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf :hasDuplicate ;
      owl:equivalentProperty
              :hasDuplicate .

rdfs:subClassOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdfs:Class ;
      rdfs:range rdfs:Resource , rdfs:Class ;
      rdfs:subPropertyOf rdfs:subClassOf .

rdf:type
      a       rdfs:Resource , rdf:Property ;
      rdfs:range rdfs:Resource , rdfs:Class ;
      rdfs:subPropertyOf rdf:type .

owl:IrreflexiveProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , owl:IrreflexiveProperty ;
      owl:equivalentClass owl:IrreflexiveProperty .

:isInterpretationOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Some data emerge as the interpretation of other."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is interpretation of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isInterpretationOf , :related ;
      owl:equivalentProperty
              :isInterpretationOf ;
      owl:inverseOf :hasInterpretation .

:hasSection
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Data can be cut in sections according to specific attributes."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has section"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :related , :hasSection ;
      dcterms:description "An example is the relation between a void:Dataset and a dataset being a specific void:propertyPartition."@en ;
      owl:equivalentProperty
              :hasSection ;
      owl:inverseOf :isSectionOf .

owl:OntologyProperty
      a       rdfs:Resource , rdfs:Class ;
      rdfs:subClassOf rdf:Property .

owl:imports
      a       rdfs:Resource , rdf:Property , owl:OntologyProperty ;
      rdfs:domain owl:Ontology , rdfs:Resource ;
      rdfs:range owl:Ontology , rdfs:Resource ;
      rdfs:subPropertyOf owl:imports .

owl:Property
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf owl:Property , rdfs:Resource ;
      owl:equivalentClass owl:Property .

:hasCopy
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has copy"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasCopy , :hasDerivation , :related , :hasDuplicate ;
      owl:equivalentProperty
              :hasCopy ;
      owl:inverseOf :isCopyOf .

:hasDescriptors
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Relates a data node to the collection of the descriptors used (being it a data node, obviously)."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has descriptors"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDescriptors , :related , :hasVocabulary ;
      dcterms:description "<p>We choose the term descriptor to indicate generically the element used to bind/map/qualify a value with respect to its entity. Practically, this term maps to <ul><li>\"Field\" in Object Oriented Programming; <li>\"Predicate\" in First Order Logic <li>Column identifier (Attribute) in Relation Database terminology <li>rdf:Property in the Resource Description Framework </ul></p>"^^rdf:HTML ;
      owl:equivalentProperty
              :hasDescriptors ;
      owl:inverseOf :descriptorsOf .

:hasDependency
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has dependency"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDependency , :related , :references ;
      owl:equivalentProperty
              :hasDependency ;
      owl:inverseOf :isDependencyOf .

:duplicate
      a       owl:SymmetricProperty , rdfs:Resource , owl:IrreflexiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "duplicate"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :sameCapability , :overlappingPopulation , :overlappingVocabulary , :overlappingCapability , :related , :sameVocabulary , :duplicate , :samePopulation ;
      owl:disjointPropertyWith
              :disjointCapability ;
      owl:equivalentProperty
              :duplicate .

xsd:negativeInteger
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

owl:sameAs
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:subPropertyOf owl:sameAs .

:typesOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "types of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :typesOf , :isVocabularyOf ;
      owl:equivalentProperty
              :typesOf ;
      owl:inverseOf :hasTypes .

owl:versionInfo
      a       owl:AnnotationProperty , rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf owl:versionInfo .

xsd:long
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:long , xsd:integer ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:long .

:optimizedFrom
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "optimized from"@end ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingCapability , :isDerivationOf , :related , :processedFrom , :optimizedFrom ;
      owl:equivalentProperty
              :optimizedFrom ;
      owl:inverseOf :optimized .

xsd:short
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:long , xsd:int , xsd:integer , xsd:short ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:short .

:redundantWith
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "redundant with"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingPopulation , :redundantWith , :overlappingVocabulary , :overlappingCapability , :related ;
      owl:equivalentProperty
              :redundantWith .

rdfs:domain
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdf:Property ;
      rdfs:range rdfs:Resource , rdfs:Class ;
      rdfs:subPropertyOf rdfs:domain .

:isChangeOf
      a       rdfs:Resource , rdf:Property , owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:comment "some data is the coming change of some other"@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is change of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isChangeOf , :related , :isUpdateOf ;
      owl:equivalentProperty
              :isChangeOf ;
      owl:inverseOf :hasChange .

:cleanedInto
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Clean to make emerge potential capabilities."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "cleaned into"@end ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :cleanedInto , :overlappingCapability , :hasDerivation , :related ;
      owl:equivalentProperty
              :cleanedInto ;
      owl:inverseOf :cleanedFrom .

owl:Thing
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf owl:Thing , rdfs:Resource ;
      owl:equivalentClass owl:Thing .

owl:disjointWith
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:range rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subPropertyOf owl:disjointWith .

xsd:float
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:string , xsd:duration , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:time , xsd:unsignedByte , xsd:date , xsd:boolean , xsd:byte , xsd:nonNegativeInteger , xsd:dateTime , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

owl:Class
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , owl:Class , rdfs:Class ;
      owl:equivalentClass owl:Class .

:hasDeletion
      a       owl:InverseFunctionalProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "A data node is the to-delete-information of some other. In other terms, it is the outdated information."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has deletion"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasUpdate , :hasChange , :hasDeletion , :related ;
      dcterms:description "<p>Indicates a data node which includes information that is now old or outdated. We don't indicate it to be also a part, this is to discuss.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :hasDeletion ;
      owl:inverseOf :isDeletionOf .

:isUpdatedVersionOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "updated version of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :olderVersion , :version , :isUpdatedVersionOf , :related , :isUpdateOf ;
      owl:equivalentProperty
              :isUpdatedVersionOf ;
      owl:inverseOf :hasUpdatedVersion .

:datatypesOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "datatypes of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :datatypesOf , :related , :isVocabularyOf ;
      owl:equivalentProperty
              :datatypesOf ;
      owl:inverseOf :hasDatatypes .

owl:Ontology
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , owl:Ontology ;
      owl:equivalentClass owl:Ontology .

rdfs:Class
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdfs:Class ;
      owl:equivalentClass rdfs:Class .

:sameVocabulary
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "same vocabulary"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingVocabulary , :overlappingCapability , :sameVocabulary , :related ;
      owl:equivalentProperty
              :sameVocabulary .

rdfs:subPropertyOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdf:Property ;
      rdfs:range rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf rdfs:subPropertyOf .

:hasStandIn
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Some data is a substitute of another, for specific reasons."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has stand-in"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingCapability , :hasDerivation , :related , :hasStandIn ;
      dcterms:description "<p>Are we sure a stand-in is always a derivation?</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :hasStandIn ;
      owl:inverseOf :isStandInOf .

owl:SymmetricProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf owl:SymmetricProperty , rdfs:Resource , owl:ObjectProperty ;
      owl:equivalentClass owl:SymmetricProperty .

:relationsOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "relations of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :relationsOf , :descriptorsOf , :related , :isVocabularyOf ;
      owl:equivalentProperty
              :relationsOf ;
      owl:inverseOf :hasRelations .

owl:InverseFunctionalProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf owl:InverseFunctionalProperty , rdfs:Resource , owl:ObjectProperty ;
      owl:equivalentClass owl:InverseFunctionalProperty .

owl:equivalentClass
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:range rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subPropertyOf owl:equivalentClass .

xsd:gYearMonth
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

:related
      a       owl:SymmetricProperty , rdfs:Resource , owl:ReflexiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "A data node is connected to one other."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "related"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related ;
      dcterms:description "<p>This is the Top Property of Datanode.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :related .

:refactoredInto
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "refactored into"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :hasDerivation , :related , :refactoredInto ;
      owl:equivalentProperty
              :refactoredInto ;
      owl:inverseOf :refactoredFrom .

:hasAddition
      a       owl:InverseFunctionalProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "some data is the addition-update of some other"@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has addition"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasUpdate , :hasChange , :related , :hasAddition ;
      owl:equivalentProperty
              :hasAddition ;
      owl:inverseOf :isAdditionOf .

:sameCapability
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "same capability"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :sameCapability , :overlappingPopulation , :overlappingVocabulary , :overlappingCapability , :sameVocabulary , :related , :samePopulation ;
      owl:equivalentProperty
              :sameCapability .

:hasExtraction
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has extraction"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasExtraction , :hasDerivation , :related , :hasInterpretation ;
      owl:equivalentProperty
              :hasExtraction ;
      owl:inverseOf :isExtractionOf .

:describes
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "A data node describes another."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "describe"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :describes , :about , :related ;
      dcterms:description "<p></p>"^^rdf:HTML ;
      owl:equivalentProperty
              :describes ;
      owl:inverseOf :describedBy .

:hasSelection
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "We represent here the outcome of the isolation of a part of a data node for a specific intent."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has selection"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :hasDerivation , :hasSelection , :related ;
      owl:equivalentProperty
              :hasSelection ;
      owl:inverseOf :isSelectionOf .

:descriptorsOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "descriptors of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :descriptorsOf , :related , :isVocabularyOf ;
      owl:equivalentProperty
              :descriptorsOf ;
      owl:inverseOf :hasDescriptors .

xsd:hexBinary
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

:isAdditionOf
      a       rdfs:Resource , rdf:Property , owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is addition of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isChangeOf , :related , :isUpdateOf , :isAdditionOf ;
      owl:equivalentProperty
              :isAdditionOf ;
      owl:inverseOf :hasAddition .

xsd:integer
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:decimal , xsd:integer ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:integer .

:processedInto
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "A data node is processed (transformed) to obtain another one."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "processed into"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :hasDerivation , :related ;
      owl:equivalentProperty
              :processedInto ;
      owl:inverseOf :processedFrom .

:hasPart
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "To related a data node to another which is somehow contained in it."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has part"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :related ;
      owl:equivalentProperty
              :hasPart ;
      owl:inverseOf :isPartOf .

:hasInference
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has inference"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasInference , :hasDerivation , :related , :hasInterpretation ;
      owl:equivalentProperty
              :hasInference ;
      owl:inverseOf :isInferenceOf .

:disjointCapability
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "disjoint capability"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :differentCapability , :differentPopulation , :related , :differentVocabulary , :disjointCapability ;
      owl:equivalentProperty
              :disjointCapability ;
      owl:propertyDisjointWith
              :overlappingCapability .

:isPortionOf
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is portion of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isPortionOf , :isPartOf , :related ;
      owl:equivalentProperty
              :isPortionOf ;
      owl:inverseOf :hasPortion .

xsd:gYear
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

owl:AnnotationProperty
      a       rdfs:Resource , rdfs:Class .

:refactoredFrom
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "refactored from"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :refactoredFrom , :isDerivationOf , :related , :processedFrom ;
      owl:equivalentProperty
              :refactoredFrom ;
      owl:inverseOf :refactoredInto .

rdfs:label
      a       rdfs:Resource , rdf:Property ;
      rdfs:range rdfs:Resource , rdfs:Literal ;
      rdfs:subPropertyOf rdfs:label .

:isStatisticOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is statistic of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :describes , :isDerivationOf , :isComputationOf , :about , :related , :isStatisticOf , :processedFrom ;
      owl:equivalentProperty
              :isStatisticOf ;
      owl:inverseOf :hasStatistic .

:hasAnonymized
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has anonymized substitute"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :hasAnonymized , :overlappingCapability , :hasDerivation , :related , :hasStandIn ;
      owl:equivalentProperty
              :hasAnonymized ;
      owl:inverseOf :isAnonymizedOf .

:newerVersion
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "newer version of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :version , :newerVersion , :related ;
      owl:equivalentProperty
              :newerVersion ;
      owl:inverseOf :olderVersion .

:adjacent
      a       owl:SymmetricProperty , rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "To relate a data node to any of their adjacent data node."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "adjacent"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :adjacent , :related ;
      dcterms:description "<p>This property basically represents the proximity of some data node to another, without assuming any other kind of relation at domain or structural level.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :adjacent .

:Datanode
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:comment "A data node is an underspecified data node, in a network of data nodes."@en ;
      rdfs:label "A data node"@en ;
      rdfs:subClassOf owl:Thing , :Datanode , rdfs:Resource ;
      owl:equivalentClass :Datanode .

:isAnonymizedOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is anonymized substitute of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isStandInOf , :overlappingCapability , :isDerivationOf , :related , :isAnonymizedOf , :processedFrom ;
      owl:equivalentProperty
              :isAnonymizedOf ;
      owl:inverseOf :hasAnonymized .

rdfs:Container
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdfs:Container ;
      owl:equivalentClass rdfs:Container .

()    a       rdfs:Resource , rdf:List .

:processedFrom
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "processed from"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :related , :processedFrom ;
      owl:equivalentProperty
              :processedFrom ;
      owl:inverseOf :processedInto .

:overlappingCapability
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "overlapping capability"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingCapability , :related ;
      dcterms:description "<p>Two data nodes have similar potential. This may refer to any kind of feature, being it structural (they share schemas), physical (they are both in XML) or related to the domain (they both talk about Music Artists) - just to make few examples.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :overlappingCapability .

:overlappingVocabulary
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "overlapping vocabulary"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingCapability , :overlappingVocabulary , :related ;
      owl:equivalentProperty
              :overlappingVocabulary .

:hasStatistic
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has statistic"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :describedBy , :hasComputation , :hasStatistic , :hasDerivation , :related , :metadata ;
      owl:equivalentProperty
              :hasStatistic ;
      owl:inverseOf :isStatisticOf .

xsd:byte
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:byte , xsd:long , xsd:int , xsd:integer , xsd:short ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:byte .

:isExampleOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "example of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isExampleOf , :isPartOf , :related , :isSelectionOf ;
      owl:equivalentProperty
              :isExampleOf ;
      owl:inverseOf :hasExample .

:hasCache
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has cache"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasCopy , :hasSnapshot , :version , :overlappingCapability , :hasDerivation , :related , :hasCache , :hasDuplicate , :hasStandIn ;
      owl:equivalentProperty
              :hasCache ;
      owl:inverseOf :isCacheOf .

xsd:nonPositiveInteger
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime .

:hasAnnotation
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has annotation"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasAttached , :adjacent , :related , :metadata , :hasAnnotation ;
      owl:equivalentProperty
              :hasAnnotation ;
      owl:inverseOf :isAnnotationOf .

:isAnnotationOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is annotation of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :adjacent , :about , :related , :attachedTo , :isAnnotationOf ;
      owl:equivalentProperty
              :isAnnotationOf ;
      owl:inverseOf :hasAnnotation .

:isDependencyOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is dependency of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDependencyOf , :related , :referencedBy ;
      owl:equivalentProperty
              :isDependencyOf ;
      owl:inverseOf :hasDependency .

:disjointSection
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Data can be cut in sections according to specific attributes."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "disjoint section"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :differentCapability , :adjacent , :disjointPart , :disjointSection , :related , :differentVocabulary ;
      owl:equivalentProperty
              :disjointSection .

owl:ReflexiveProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , owl:ReflexiveProperty ;
      owl:equivalentClass owl:ReflexiveProperty .

:hasPortion
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has portion"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :hasPortion , :related ;
      dcterms:description ":hasPortion is used to capture the relation with a subset of the data."@en ;
      owl:equivalentProperty
              :hasPortion ;
      owl:inverseOf :isPortionOf .

:linkedBy
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "linked by"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :linkedBy , :related , :referencedBy ;
      owl:equivalentProperty
              :linkedBy ;
      owl:inverseOf :links .

:isDuplicateOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf :isDuplicateOf ;
      owl:equivalentProperty
              :isDuplicateOf .

:metadata
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "A data node has another data node as metadata."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "metadata" ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :metadata ;
      dcterms:description "<p>This is used to relate a data node to its metadata.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :metadata ;
      owl:inverseOf :about .

:remodelledFrom
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , rdfs:Resource ;
      rdfs:label "remodelled from"@en ;
      rdfs:range owl:Thing , rdfs:Resource ;
      rdfs:subPropertyOf :remodelledFrom , :precessedFrom ;
      dcterms:description "Refactor is transforming to make it simpler, optimized, clean. Remodelling looks not necessarly that."@en ;
      owl:equivalentProperty
              :remodelledFrom ;
      owl:inverseOf :remodelledTo .

:differentCapability
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "different capability"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :differentCapability , :related ;
      dcterms:description "<p>Two nodes have different potential. Two data nodes using different vocabularies or two copies of the same data in different places.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :differentCapability .

:version
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "version"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :version , :related ;
      dcterms:description "<p>Use this property to represent a temporal relation between two data nodes that are meant to be the same at a different point in time. The property is symmetric and does not specify a direction.<br/>This property is not transitive. While it can be argued that the identity of something tracked temporarly should not change, thus implying transitivity, we want support the case when a data note has more then one following version (branching). Avoiding transitivity allows it.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :version .

rdf:subject
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdf:Statement ;
      rdfs:subPropertyOf rdf:subject ;
      owl:equivalentProperty
              rdf:subject .

xsd:boolean
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:string , xsd:duration , xsd:float , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:time , xsd:unsignedByte , xsd:date , xsd:byte , xsd:nonNegativeInteger , xsd:dateTime , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

xsd:date
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:string , xsd:duration , xsd:float , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:time , xsd:unsignedByte , xsd:boolean , xsd:byte , xsd:nonNegativeInteger , xsd:dateTime , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

:isSectionOf
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is section of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isSectionOf , :isPartOf , :related ;
      owl:equivalentProperty
              :isSectionOf ;
      owl:inverseOf :hasSection .

:isDerivationOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is derivation of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :related ;
      dcterms:description "<p>This relation indicates that a data node is the origin of another, in the sense that the second have been produced using the first as main information source.</p>"^^rdf:HTML , "<p>Is this property transitive?</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :isDerivationOf ;
      owl:inverseOf :hasDerivation .

:differentVocabulary
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "different vocabulary"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :differentCapability , :related , :differentVocabulary ;
      owl:equivalentProperty
              :differentVocabulary ;
      owl:propertyDisjointWith
              :sameVocabulary .

xsd:string
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:duration , xsd:float , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:time , xsd:unsignedByte , xsd:date , xsd:boolean , xsd:byte , xsd:nonNegativeInteger , xsd:dateTime , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

:identifiersOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "identifiers of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :identifiersOf , :isSectionOf , :isPartOf , :related ;
      owl:equivalentProperty
              :identifiersOf ;
      owl:inverseOf :hasIdentifiers .

:hasChange
      a       owl:InverseFunctionalProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "some data has a change to come"@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has change"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasUpdate , :hasChange , :related ;
      owl:equivalentProperty
              :hasChange ;
      owl:inverseOf :isChangeOf .

xsd:decimal
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime .

:precessedFrom
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf :precessedFrom ;
      owl:equivalentProperty
              :precessedFrom .

:isExtractionOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "extraction of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isInterpretationOf , :related , :isExtractionOf ;
      owl:equivalentProperty
              :isExtractionOf ;
      owl:inverseOf :hasExtraction .

:hasVocabulary
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "relates a data node to a set of names that are all used in the first."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has vocabulary"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :hasVocabulary ;
      dcterms:description "<p>When a data node :hasVocabulary another, we expect the latter to be the collection of terms used by the data node to name its properties and types.<br/>How to know if there is some term that is not part of that vocabulary? In other words, is it relevant to know whether a vocabulary is complete or not wrt some data?</p>"^^rdf:HTML , "<p>The range of this property is a data node which enumerates a set of terms that are all used by the subject data node to name structural elements, like attribute names or types.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :hasVocabulary ;
      owl:inverseOf :isVocabularyOf .

xsd:int
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:long , xsd:int , xsd:integer ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:int .

owl:onProperty
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , owl:Class , rdfs:Class , owl:Restriction ;
      rdfs:range owl:Property , rdfs:Resource ;
      rdfs:subPropertyOf owl:onProperty .

rdfs:seeAlso
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf rdfs:seeAlso ;
      owl:equivalentProperty
              rdfs:seeAlso .

rdfs:comment
      a       rdfs:Resource , rdf:Property ;
      rdfs:range rdfs:Resource , rdfs:Literal ;
      rdfs:subPropertyOf rdfs:comment .

rdf:Seq
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Seq , rdfs:Container ;
      owl:equivalentClass rdf:Seq .

xsd:nonNegativeInteger
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:nonNegativeInteger , xsd:integer ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:nonNegativeInteger .

:hasRelations
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Relates data to the relations used."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has relations"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDescriptors , :related , :hasRelations , :hasVocabulary ;
      owl:equivalentProperty
              :hasRelations ;
      owl:inverseOf :relationsOf .

owl:FunctionalProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Property , owl:FunctionalProperty ;
      owl:equivalentClass owl:FunctionalProperty .

:links
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "A data node links to other data using specific tecniques known in the context of Linked Data (like rdfs:seeAlso or owl:sameAs)."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "links"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :references , :links ;
      owl:equivalentProperty
              :links ;
      owl:inverseOf :linkedBy .

xsd:unsignedLong
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:nonNegativeInteger , xsd:long , xsd:unsignedLong , xsd:integer ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:unsignedLong .

owl:differentFrom
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:subPropertyOf owl:differentFrom .

:isDeletionOf
      a       rdfs:Resource , rdf:Property , owl:FunctionalProperty , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is deletion of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDeletionOf , :isChangeOf , :related , :isUpdateOf ;
      owl:equivalentProperty
              :isDeletionOf ;
      owl:inverseOf :hasDeletion .

xsd:double
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

:inconsistentWith
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "inconsistent with"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :inconsistentWith , :related ;
      dcterms:description "<p>A data node that should not be used together with another. We intend consistency in a general sense: two data nodes are inconsistent because they do not agree.</p>"^^rdf:HTML , "<p>It can be the case that a single data node is corrupted to some respect. It can then be marked to be inconsistent with itself.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :inconsistentWith ;
      owl:propertyDisjointWith
              :consistentWith .

:about
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "A data node is about another data node."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "about"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :about , :related ;
      dcterms:description "<p>A data node may be metadata about another.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :about ;
      owl:inverseOf :metadata .

:isInferenceOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is inference of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isInterpretationOf , :isInferenceOf , :related ;
      owl:equivalentProperty
              :isInferenceOf ;
      owl:inverseOf :hasInference .

:isCopyOf
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is copy of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isCopyOf , :related , :isDuplicateOf ;
      owl:equivalentProperty
              :isCopyOf ;
      owl:inverseOf :hasCopy .

:hasAttributes
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Relates data to the attributes used."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has attributes"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDescriptors , :related , :hasAttributes , :hasVocabulary ;
      dcterms:description "<p>We relate with this property a data node to a collection of attributes used in it. We distinguish attributes from relations because the first does qualify its range but only its domain (saying that a person is 1.82m tall does not change our knowledge about 1.82m).</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :hasAttributes ;
      owl:inverseOf :attributesOf .

xsd:anyURI
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

:isReificationOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is reification of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :related , :isReificationOf , :processedFrom ;
      owl:equivalentProperty
              :isReificationOf ;
      owl:inverseOf :hasReification .

rdf:rest
      a       rdfs:Resource , rdf:Property , owl:FunctionalProperty ;
      rdfs:domain rdfs:Resource , rdf:List ;
      rdfs:range rdfs:Resource , rdf:List ;
      rdfs:subPropertyOf rdf:rest ;
      owl:equivalentProperty
              rdf:rest .

rdfs:range
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdf:Property ;
      rdfs:range rdfs:Resource , rdfs:Class ;
      rdfs:subPropertyOf rdfs:range .

:hasUpdatedVersion
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "updated version"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :newerVersion , :version , :hasUpdate , :related , :hasUpdatedVersion ;
      dcterms:description "It is not clear why this is not also a sub property of :nextVersion"@en ;
      owl:equivalentProperty
              :hasUpdatedVersion ;
      owl:inverseOf :isUpdatedVersionOf .

dcterms:description
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf dcterms:description .

:hasDerivation
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has derivation"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDerivation , :related ;
      owl:equivalentProperty
              :hasDerivation ;
      owl:inverseOf :isDerivationOf .

:hasSummarization
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has summarization"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasSummarization , :hasDerivation , :related ;
      owl:equivalentProperty
              :hasSummarization ;
      owl:inverseOf :isSummarizationOf .

:overlappingPopulation
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "overlapping population"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingPopulation , :overlappingCapability , :related ;
      owl:equivalentProperty
              :overlappingPopulation .

:disjointPart
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "disjoint part"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :adjacent , :disjointPart , :related ;
      owl:equivalentProperty
              :disjointPart .

:isSelectionOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is selection of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isPartOf , :related , :isSelectionOf ;
      owl:equivalentProperty
              :isSelectionOf ;
      owl:inverseOf :hasSelection .

:hasInterpretation
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Some data is interpretated such to produce other data."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has interpretation"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDerivation , :related , :hasInterpretation ;
      owl:equivalentProperty
              :hasInterpretation ;
      owl:inverseOf :isInterpretationOf .

:referencedBy
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "referenced by"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :referencedBy ;
      owl:equivalentProperty
              :referencedBy ;
      owl:inverseOf :references .

xsd:unsignedShort
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:unsignedShort , xsd:nonNegativeInteger , xsd:unsignedInt , xsd:long , xsd:unsignedLong , xsd:int , xsd:integer , xsd:short ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:unsignedShort .

xsd:time
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:string , xsd:duration , xsd:float , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:unsignedByte , xsd:date , xsd:boolean , xsd:byte , xsd:nonNegativeInteger , xsd:dateTime , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

rdf:first
      a       rdfs:Resource , rdf:Property , owl:FunctionalProperty ;
      rdfs:domain rdfs:Resource , rdf:List ;
      rdfs:subPropertyOf rdf:first ;
      owl:equivalentProperty
              rdf:first .

:hasTypes
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Relatesa a data node to the collection of types used."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has types"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :hasVocabulary , :hasTypes ;
      owl:equivalentProperty
              :hasTypes ;
      owl:inverseOf :typesOf .

owl:equivalentProperty
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf owl:equivalentProperty .

:describedBy
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "Data have other data as description."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "described by" ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :describedBy , :related , :metadata ;
      owl:equivalentProperty
              :describedBy ;
      owl:inverseOf :describes .

:differentPopulation
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "different population"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :differentCapability , :differentPopulation , :related ;
      owl:equivalentProperty
              :differentPopulation ;
      owl:propertyDisjointWith
              :samePopulation .

rdf:List
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:List ;
      owl:equivalentClass rdf:List .

:attributesOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "attributes of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :descriptorsOf , :related , :attributesOf , :isVocabularyOf ;
      owl:equivalentProperty
              :attributesOf ;
      owl:inverseOf :hasAttributes .

rdfs:ContainerMembershipProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Property , rdfs:ContainerMembershipProperty ;
      owl:equivalentClass rdfs:ContainerMembershipProperty .

:attachedTo
      a       rdfs:Resource , rdf:Property ;
      rdfs:comment "Data are attached to data for some reason"@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "attached to"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :adjacent , :related , :attachedTo ;
      dcterms:description "This, along with its inverse \"haveAttached\" , are considered to model the \"physical\" dependency between data. You need to have access to the first in order to access the second, for example. An obvious example is an email and its attachments; but there may emerge other examples."@en ;
      owl:equivalentProperty
              :attachedTo ;
      owl:inverseOf :hasAttached .

:schemaUsedBy
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "schema used by"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :schemaUsedBy , :related , :referencedBy ;
      dcterms:description "Does being a schema imply being a dependency?"@en ;
      owl:equivalentProperty
              :schemaUsedBy ;
      owl:inverseOf :usesSchema .

:hasUpdate
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has update"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasUpdate , :related ;
      dcterms:description "<p>A data node may be related to another by improving its currency.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :hasUpdate ;
      owl:inverseOf :isUpdateOf .

rdfs:Datatype
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdfs:Class , rdfs:Datatype ;
      owl:equivalentClass rdfs:Datatype .

rdf:Alt
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Alt , rdfs:Container ;
      owl:equivalentClass rdf:Alt .

:isVocabularyOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "relates a set of names to a data node that make use of them as part of their schema."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is vocabulary of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :isVocabularyOf ;
      owl:equivalentProperty
              :isVocabularyOf ;
      owl:inverseOf :hasVocabulary .

owl:ObjectProperty
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      owl:equivalentClass owl:ObjectProperty .

owl:intersectionOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subPropertyOf owl:intersectionOf .

xsd:gMonthDay
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

owl:inverseOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf owl:inverseOf .

rdf:object
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdf:Statement ;
      rdfs:subPropertyOf rdf:object ;
      owl:equivalentProperty
              rdf:object .

:isCacheOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is cache of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :version , :isStandInOf , :overlappingCapability , :isCacheOf , :isDerivationOf , :related , :isCopyOf , :isDuplicateOf , :isSnapshotOf ;
      owl:equivalentProperty
              :isCacheOf ;
      owl:inverseOf :hasCache .

:isComputationOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is computation of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isDerivationOf , :isComputationOf , :related , :processedFrom ;
      owl:equivalentProperty
              :isComputationOf ;
      owl:inverseOf :hasComputation .

:combinationFrom
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "A data node that is the result of the combination of another data node with something else."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "combination from"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :combinationFrom , :isDerivationOf , :related ;
      owl:equivalentProperty
              :combinationFrom ;
      owl:inverseOf :combinedIn .

rdfs:Resource
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource ;
      owl:equivalentClass rdfs:Resource .

owl:DatatypeProperty
      a       rdfs:Resource , rdfs:Class ;
      rdfs:subClassOf rdf:Property .

:hasComputation
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has computation"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :hasComputation , :hasDerivation , :related ;
      owl:equivalentProperty
              :hasComputation ;
      owl:inverseOf :isComputationOf .

:usesSchema
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Relates a data node to another used as schema."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "uses schema"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :usesSchema , :related , :references ;
      dcterms:description "<p>We distinguish the schema and the vocabulary as follows. A vocabulary is the enumeration of a set of terms. A schema organize a set of terms in a system of some sort. A list of body parts is not the anatomy of a body. The furniture is not an interior design model.</p>"^^rdf:HTML , "<p>The second is intended to be a self contained model that is (partly) used in the data node.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :usesSchema ;
      owl:inverseOf :schemaUsedBy .

rdf:Property
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Property ;
      owl:equivalentClass rdf:Property .

:hasReification
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has reification"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :hasReification , :hasDerivation , :related ;
      owl:equivalentProperty
              :hasReification ;
      owl:inverseOf :isReificationOf .

xsd:unsignedByte
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:unsignedShort , xsd:unsignedByte , xsd:byte , xsd:nonNegativeInteger , xsd:unsignedInt , xsd:long , xsd:unsignedLong , xsd:int , xsd:integer , xsd:short ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:unsignedByte .

xsd:positiveInteger
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

:consistentWith
      a       owl:SymmetricProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "consistent with"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :consistentWith ;
      dcterms:description "<p>It can be the case that a single data node is verified to be correct. It can then be marked to be consistent with itself.</p>"^^rdf:HTML , "<p>A data node that should be used together with another. We intend consistency in a general sense: two data nodes are consistent because they agree (ie, they do not disagree...).</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :consistentWith .

:previousVersion
      a       owl:InverseFunctionalProperty , rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "previous version"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :olderVersion , :version , :related , :previousVersion ;
      owl:equivalentProperty
              :previousVersion ;
      owl:inverseOf :nextVersion .

rdfs:isDefinedBy
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf rdfs:seeAlso , rdfs:isDefinedBy ;
      owl:equivalentProperty
              rdfs:isDefinedBy .

:cleanedFrom
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "cleaned from"@end ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :cleanedFrom , :overlappingCapability , :isDerivationOf , :related , :processedFrom ;
      owl:equivalentProperty
              :cleanedFrom ;
      owl:inverseOf :cleanedInto .

xsd:unsignedInt
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf xsd:nonNegativeInteger , xsd:unsignedInt , xsd:long , xsd:unsignedLong , xsd:int , xsd:integer ;
      owl:disjointWith xsd:time , xsd:string , xsd:date , xsd:boolean , xsd:duration , xsd:float , xsd:dateTime ;
      owl:equivalentClass xsd:unsignedInt .

xsd:gMonth
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

rdf:Statement
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Statement ;
      owl:equivalentClass rdf:Statement .

owl:oneOf
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subPropertyOf owl:oneOf .

:hasExample
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has example"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :hasDerivation , :hasSelection , :related , :hasExample ;
      owl:equivalentProperty
              :hasExample ;
      owl:inverseOf :isExampleOf .

:isSummarizationOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is summarization of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isSummarizationOf , :isDerivationOf , :related ;
      owl:equivalentProperty
              :isSummarizationOf ;
      owl:inverseOf :hasSummarization .

:hasSample
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has sample"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasPart , :hasSample , :hasPortion , :related ;
      owl:equivalentProperty
              :hasSample ;
      owl:inverseOf :isSampleOf .

owl:disjointPropertyWith
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf owl:disjointPropertyWith .

dcterms:creator
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf dcterms:creator .

:combinedIn
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "A data node that have been combined (with something else) in a given data node."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "combined in"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasDerivation , :related , :combinedIn ;
      owl:equivalentProperty
              :combinedIn ;
      owl:inverseOf :combinationFrom .

:remodelledTo
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "remodelled to"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :hasDerivation , :related , :remodelledTo ;
      owl:equivalentProperty
              :remodelledTo ;
      owl:inverseOf :remodelledFrom .

rdf:XMLLiteral
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:XMLLiteral ;
      owl:equivalentClass rdf:XMLLiteral .

rdf:predicate
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain rdfs:Resource , rdf:Statement ;
      rdfs:subPropertyOf rdf:predicate ;
      owl:equivalentProperty
              rdf:predicate .

:olderVersion
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "older version of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :version , :olderVersion , :related ;
      owl:equivalentProperty
              :olderVersion ;
      owl:inverseOf :newerVersion .

xsd:duration
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:string , xsd:float , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:time , xsd:unsignedByte , xsd:date , xsd:boolean , xsd:byte , xsd:nonNegativeInteger , xsd:dateTime , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

:isSampleOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is sample of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :isPortionOf , :isPartOf , :isSampleOf , :related ;
      owl:equivalentProperty
              :isSampleOf ;
      owl:inverseOf :hasSample .

:references
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "references"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :references ;
      dcterms:description "<p>It looks like there could be a more generic property here, which refer to the fact of sharing some signatures (identifiers), without assuming an order or direction of the reference. Two data nodes may simply use the same identifier independently from the intention of making a reference to anything else (then the identifier itself). Does this make sense?</p>"^^rdf:HTML , "<p>This property indicates that data includes a mention to something which is included in another data node. <br/> Talking about RDF datasets, this refer to the mention of a URI belonging to another dataset. For example, a dataset about employees could mention a Geonames location.</p>"^^rdf:HTML ;
      owl:equivalentProperty
              :references ;
      owl:inverseOf :referencedBy .

:isUpdateOf
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "is update of"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :related , :isUpdateOf ;
      owl:equivalentProperty
              :isUpdateOf ;
      owl:inverseOf :hasUpdate .

xsd:gDay
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

:hasSnapshot
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "A copy of a data node in a specific time point"@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "has snapshot"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :hasCopy , :version , :hasSnapshot , :hasDerivation , :related , :hasDuplicate ;
      owl:equivalentProperty
              :hasSnapshot ;
      owl:inverseOf :isSnapshotOf .

xsd:base64Binary
      a       rdfs:Resource , rdfs:Datatype , rdfs:Class .

owl:priorVersion
      a       rdfs:Resource , rdf:Property ;
      rdfs:domain owl:Ontology , rdfs:Resource ;
      rdfs:range owl:Ontology , rdfs:Resource ;
      rdfs:subPropertyOf owl:priorVersion .

<http://purl.org/datanode/0.2/>
      a       owl:Ontology , rdfs:Resource ;
      rdfs:label "The Datanode Vocabulary" ;
      dcterms:creator "enridaga - enricodaga@gmail.com" ;
      dcterms:description "Which is the recommended way of linking a datanode to one of its member? A vocabulary to one of its Class?"@en , "Which are the allowed inferences? Should we write a RIF ontology to describe the intended meaning of the relations of Datanode?"@en , "Is it possible to express the same things in different ways?"@en , "<p>Naming conventions: <ol><li>camel case <li>has[Noun]/is[Noun]Of <li>[present tense transitive verb]/[past tense verb]By,To,From,... <li>has[Past tense verb]/[past tense verb]To,From,... </ol></p>"^^rdf:HTML ;
      owl:versionInfo "0.2" .

owl:propertyDisjointWith
      a       rdfs:Resource , rdf:Property ;
      rdfs:subPropertyOf owl:propertyDisjointWith .

rdf:Bag
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , rdf:Bag , rdfs:Container ;
      owl:equivalentClass rdf:Bag .

xsd:dateTime
      a       rdfs:Resource , owl:Class , rdfs:Datatype , rdfs:Class ;
      owl:disjointWith xsd:string , xsd:duration , xsd:float , xsd:decimal , xsd:unsignedInt , xsd:long , xsd:int , xsd:short , xsd:unsignedShort , xsd:time , xsd:unsignedByte , xsd:date , xsd:boolean , xsd:byte , xsd:nonNegativeInteger , xsd:nonPositiveInteger , xsd:unsignedLong , xsd:integer .

owl:Restriction
      a       rdfs:Resource , owl:Class , rdfs:Class ;
      rdfs:subClassOf rdfs:Resource , owl:Class , owl:Restriction ;
      owl:equivalentClass owl:Restriction .

:samePopulation
      a       rdfs:Resource , owl:TransitiveProperty , rdf:Property , owl:ObjectProperty ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "same population"@en ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :overlappingPopulation , :overlappingCapability , :related , :samePopulation ;
      owl:equivalentProperty
              :samePopulation .

:optimized
      a       rdfs:Resource , rdf:Property , owl:ObjectProperty ;
      rdfs:comment "Optimize to amplify existing capabilities."@en ;
      rdfs:domain owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:label "optimized"@end ;
      rdfs:range owl:Thing , :Datanode , rdfs:Resource ;
      rdfs:subPropertyOf :processedInto , :overlappingCapability , :hasDerivation , :related , :optimized ;
      owl:equivalentProperty
              :optimized ;
      owl:inverseOf :optimizedFrom .
