<!doctype html>
<html>
<head>
	<title>Sankey test</title>
			<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
		<script src="http://netdna.bootstrapcdn.com/bootstrap/3.0.2/js/bootstrap.min.js"></script>
		<link href="http://netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" rel="stylesheet">
<style>
.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}
.node text {
  pointer-events: none;
  text-shadow: 0 1px 0 #fff;
}
.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .2;
}
.link:hover {
  stroke-opacity: .5;
}
.node-label{
	font-weight: bold;
}
</style>
<script type="text/javascript" src="d3.v2.js"></script>
<script type="text/javascript" src="sankey.js"></script>

</head>
<body>
<div id="diagram"></div>
<script type="text/javascript">

var aemoodata = [{ 
	id: "0",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#DBPedia",
	label: "ex:DBPedia",
	links: [{
		target: 1,
		label: "void:sparqlEndpoint",
	uri: "http://rdfs.org/ns/void#sparqlEndpoint",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "1",
	uri: "http://dbpedia.org/sparql",
	label: "http://dbpedia.org/sparql",
	links: [],
},{ 
	id: "2",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#aboutResource",
	label: "ex:aboutResource",
	links: [{
		target: 3,
		label: "dn:describes",
	uri: "http://purl.org/datanode/ns/describes",
		type: "default",
		weight: 1,
	},{
		target: 0,
		label: "dn:isPortionOf",
	uri: "http://purl.org/datanode/ns/isPortionOf",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "3",
	uri: "http://dbpedia.org/resource/Barack_Obama",
	label: "http://dbpedia.org/resource/Barack_Obama",
	links: [],
},{ 
	id: "4",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#dbpediaTypes",
	label: "ex:dbpediaTypes",
	links: [{
		target: 0,
		label: "dn:typesOf",
	uri: "http://purl.org/datanode/ns/typesOf",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "5",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#knowledgePatternOfResourceType",
	label: "ex:knowledgePatternOfResourceType",
	links: [{
		target: 6,
		label: "dn:describedBy",
	uri: "http://purl.org/datanode/ns/describedBy",
		type: "default",
		weight: 1,
	},{
		target: 7,
		label: "dn:describes",
	uri: "http://purl.org/datanode/ns/describes",
		type: "default",
		weight: 1,
	},{
		target: 8,
		label: "dn:isSelectionOf",
	uri: "http://purl.org/datanode/ns/isSelectionOf",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "6",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#knowledgePatterns",
	label: "ex:knowledgePatterns",
	links: [{
		target: 0,
		label: "dn:extractedFrom",
	uri: "http://purl.org/datanode/ns/extractedFrom",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "7",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#resourcePrimaryType",
	label: "ex:resourcePrimaryType",
	links: [{
		target: 9,
		label: "dn:isSelectionOf",
	uri: "http://purl.org/datanode/ns/isSelectionOf",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "8",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#summarizationMethods",
	label: "ex:summarizationMethods",
	links: [{
		target: 4,
		label: "dn:combinationFrom",
	uri: "http://purl.org/datanode/ns/combinationFrom",
		type: "default",
		weight: 1,
	},{
		target: 6,
		label: "dn:combinationFrom",
	uri: "http://purl.org/datanode/ns/combinationFrom",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "9",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#resourceTypes",
	label: "ex:resourceTypes",
	links: [{
		target: 4,
		label: "dn:isPortionOf",
	uri: "http://purl.org/datanode/ns/isPortionOf",
		type: "default",
		weight: 1,
	},{
		target: 2,
		label: "dn:isSectionOf",
	uri: "http://purl.org/datanode/ns/isSectionOf",
		type: "default",
		weight: 1,
	},],
},{ 
	id: "10",
	uri: "http://purl.org/datanode/ex/0.2/AEMOO/1#resourceSummary",
	label: "ex:resourceSummary",
	links: [{
		target: 3,
		label: "dn:describes",
	uri: "http://purl.org/datanode/ns/describes",
		type: "default",
		weight: 1,
	},{
		target: 2,
		label: "dn:isStandInOf",
	uri: "http://purl.org/datanode/ns/isStandInOf",
		type: "default",
		weight: 1,
	},{
		target: 2,
		label: "dn:isSummarizationOf",
	uri: "http://purl.org/datanode/ns/isSummarizationOf",
		type: "default",
		weight: 1,
	},{
		target: 2,
		label: "dn:remodelledFrom",
	uri: "http://purl.org/datanode/ns/remodelledFrom",
		type: "default",
		weight: 1,
	},{
		target: 5,
		label: "dn:usesSchema",
	uri: "http://purl.org/datanode/ns/usesSchema",
		type: "default",
		weight: 1,
	},],
},]
;

var nodes = [];
var linknodes = [];

for(var i in aemoodata){
	var node = aemoodata[i];
	nodes[node.id] = {
		"node": node.id,
		"type":"resource",
		"name": node.label
	};
	for(var li in node.links){
		var link = node.links[li];
		link.source = parseInt(node.id);
		linknodes.push(link);
		// links.push({
		// 	"source": parseInt(node.id),
		// 	"target": link.target,
		// 	"value": 1,
		// 	"label": link.label
		// });
	}
}

for(var li in linknodes){
	var newix = nodes.length;
	linknodes[li].id =newix;
	nodes[newix] = {
		"type": "relation",
		"node": newix,
		"name": linknodes[li].label
	}
}

var links = [];
for(var li in linknodes){
	var link = linknodes[li];
	links.push({
		"source": parseInt(link.source),
		"target": link.id,
		"value": 1,
		"direction": "out"
	});
	links.push({
		"source": link.id,
		"target": parseInt(link.target),
		"value": 1,
		"direction": "in"
	});
}





/*
var data = {
"nodes":[
{"node":0,"name":"node0"},
{"node":1,"name":"node1"},
{"node":2,"name":"node2"},
{"node":3,"name":"node3"},
{"node":4,"name":"node4"}
],
"links":[
{"source":0,"target":2,"value":2},
{"source":1,"target":2,"value":2},
{"source":1,"target":3,"value":2},
{"source":0,"target":4,"value":2},
{"source":2,"target":3,"value":2},
{"source":2,"target":4,"value":2},
{"source":3,"target":4,"value":4}
]}; */

var data = {};
data.nodes = nodes;
data.links = links;

var margin = {top: 1, right: 1, bottom: 6, left: 1},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d) + " TWh"; },
    color = d3.scale.category20();

var svg = d3.select("#diagram").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var sankey = d3.sankey()
    .nodeWidth(15) //15
    .nodePadding(110)
    .size([width, height]);

var path = sankey.link();

var init = function(data) {

  sankey
      .nodes(data.nodes)
      .links(data.links)
      .layout(30);

  var link = svg.append("g").selectAll(".link")
      .data(data.links)
    .enter().append("path")
      .attr("class", function(d){return "link " + ((d.direction == "in")?"link-in":"link-out");})
      .attr("d", path)
	  .attr("title", function(d){ return d.label; })
//      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .style("stroke-width", function(d) { return 5; })
      // .style("stroke", function(d) { return ( (d.direction == "out") ? color(d.target.name.replace(/ .*/, "") ) : color(d.source.name.replace(/ .*/, "") )); })
      .sort(function(a, b) { return b.dy - a.dy; });

  link.append("title")
  	.text(function(d){ return d.label; });
//      .text(function(d) { return d.source.name + " â†’ " + d.target.name + "\n" + format(d.value); });

  var node = svg.append("g").selectAll(".node")
      .data(data.nodes)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

  node.append("rect")
      .attr("height", function(d) { return (d.type=='relation')?5:d.dy; })
      .attr("y", function(d) { return (d.type=='relation')?3: 0; })
      .attr("width", sankey.nodeWidth())
      // .style("fill", function(d) { return d.color = color(d.name.replace(/ .*/, "")); })
	  .style("fill", function(d) { return d.color = color((d.type=="relation")? d.name.replace(/ .*/, "") : d.type.replace(/ .*/, "")); })
      .style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { return d.name + "\n" + format(d.value); });

  node.append("text")
	  .attr("class", function(d){ return (d.type=='relation')?"":"node-label"; })
      .attr("x", -6)
      .attr("y", function(d) { return d.dy / 2; })
      .attr("dy", ".35em")
      .attr("text-anchor", "end")
      .attr("transform", null)
      .text(function(d) { return d.name; })
    .filter(function(d) { return d.x < width / 2; })
      .attr("x", 6 + sankey.nodeWidth())
      .attr("text-anchor", "start");

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    sankey.relayout();
    link.attr("d", path);
  }
}

init(data);

$(document).ready(function () {
    // $("a").tooltip({
//         'placement': 'right'
//     });
//     
		//     $("svg path").tooltip({
		//         'container': 'body',
		// 'placement': function(tip, element){ console.log(element);}
		//     });
});

</script></body></html>