REXPLORE

Use case abstraction
Source: paper


"Rexplore (uses) a fine-grained, 
automatically populated topic ontology, in which topics are identified and structured according to a number of semantic relationships. 
The resulting knowledge base is generated using a combination of statistical methods and background knowledge on the basis of a large-scale 
corpus of publications [...] and is then augmented with geographic information [...] . "

0) Rexplore Ontology is automatically populated
1) The Ontology includes Topics with a number of semantic relationships
2) The KnowledgeBase is generated using a combination of statistical methods and background knowledge
3) Background knowledge includes a corpus of publications
4) The Knowledge Base is augmented with geographic information

---

@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix dn: <http://purl.org/datanode/ns/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:ontology 
	dn:describes :topicsSet ;
	dn:hasRelations :semanticRelations ;
	dn:isPartOf :knowledgeBase .

:knowledgeBase dn:combinationFrom :backgroundKnowledge .
:knowledgeBase dn:combinationFrom :statisticsResults .
:statisticsResults dn:isStatisticOf :backgroundKnowledge .

:backgroundKnowledge dn:hasPart :corpusOfPublications .

:geographicInformation dn:isExtractionOf :backgroundKnowledge .
:knowledgeBase dn:hasPart :geographicInformation .

---

"[...] Rexplore integrates a variety of data sources in different formats, including: 
DBpedia, DBLP++ (http://dblp.l3s.de/dblp.rdf.gz), the MAS API, GeoNames (http://www.geonames.org/), 
and parsed web pages (e.g., Wikipedia, Google Scholar). 
[...] The process of generating the populated topic ontology exploits information collected from Google Scholar, 
EventSeer (http://eventseer.net/) and Wikipedia. The geographic information and the standardization of the 
affiliations rely on information from DBpedia and GeoNames [...] . "

0) Rexplore (knowledge base) includes portions of DBPedia, DBLP, MAS, Geonames, Wikipedia, Google Scholar
1) The topic ontology uses information collected from Google Scholar, Eventseer and Wikipedia
2) The geographic information and the standardization of the affiliations rely on information from DBPedia and Geonames

---

@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix dn: <http://purl.org/datanode/ns/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:knowledgeBase 
	 dn:hasPart [ dn:isPartOf :DBPedia ] ;
	 dn:hasPart [ dn:isPartOf :DBLP ] ;
	 dn:hasPart [ dn:isPartOf :MAS ] ;
	 dn:hasPart [ dn:isPartOf :Geonames ] ;
	 dn:hasPart [ dn:isPartOf :Wikipedia ] ;
	 dn:hasPart [ dn:isPartOf :GoogleScholar ] ;

	 dn:hasPart :ontology ;
	 dn:hasPart :geographicInformation ;
	 dn:hasPart :affiliations .
	 
:ontology
	 dn:processedFrom :GoogleScholar ;
	 dn:processedFrom :EventSeer ;
	 dn:processedFrom :Wikipedia .
	
:geographicInformation
	 dn:processedFrom :DBPedia ;
	 dn:processedFrom :Geonames .
	
:affiliations
	 dn:processedFrom :DBPedia ;
	 dn:processedFrom :Geonames .

---

"This ontology is automatically populated and periodically updated by the Klink algorithm [...], which takes as input 
a corpus of publications, annotated with keywords (these can be user- defined or automatically extracted from the text 
of a publication) and performs three key operations, using a combination of statistical methods and background knowledge:
• It identifies research areas from the given set of keywords, tidying them up by fixing errors and by removing keywords 
that do not denote research areas – e.g., “Case Study” or “NeOn Project”.
• It automatically computes three types of semantic relationships between research areas [...]
• It returns a knowledge base of semantic relationships expressed in OWL.
In particular, Klink computes the following three relationships between topics:
• skos:broaderGeneric. [...]
• contributesTo. This is defined as a sub-property of skos:related [...]
• relatedEquivalent. This is also defined as a sub-property of skos:related [...]
Our ontology builds on the BIBO ontology, which in turn builds on SKOS, FOAF and other standards. 
[...] Currently it comprises 1500 topics linked by almost 3000 semantic relationships. "

0) The ontology is populated and updated by the Klink algorithm
1) The algorithm takes as input a corpus of publications annotated with keywords
2) Keywords are user-defined or extracted from the text
3) The algorithm identifies research areas (topics) from the given set of keywords, tidying them up by fixing errors and by removing irrelevant keywords
4) The algorithm automatically computes semantic relationships between research areas
5) The algorithm returns the semantic relationships between research areas (topics) expressed in OWL
6) The algorithm computes: skos:broaderGeneric, contributesTo (sub-property of skos:related) and relatedEquivalent (sub-property of skos:related)
7) The ontology extends BIBO (which in turn extends SKOS and FOAF)
8) The ontology comprises 1500 topics linked by almost 3000 semantic relationships

---

@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix dn: <http://purl.org/datanode/ns/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:corpusOfPublications
	dn:hasSection :keywords .
	
:keywords 
	dn:hasPortion :extractedKeywords ;
	dn:hasPortion :userDefinedKeywords .
:extractedKeywords
	dn:isExtractionOf :publicationTexts .

:ontology
	dn:hasPortion :correctKeywords ;
	dn:optimizedFrom :keywords ;
	dn:cleanedFrom :keywords .
:keywords 
	dn:hasSelection :correctKeywords ;
	dn:hasPortion :correctKeywords ;
	dn:hasPortion :irrelevantKeywords ;
	dn:hasPortion :erroneousKeywords .

:ontology
	dn:describes :topicsSet ;
	dn:hasSection :relations .

:relations
	dn:hasVocabulary :semanticRelations ;
	dn:processedFrom :corpusOfPublications .

:semanticRelations
	dn:describes skos:broaderGeneric ;
	dn:describes :constributesTo ;
	dn:describes :relatedEquivalent .

:contributesTo
	rdfs:subPropertyOf skos:related .
:relatedEquivalent
	rdfs:subPropertyOf skos:related .

:ontology
	dn:usesSchema <http://purl.org/ontology/bibo/> .

<http://purl.org/ontology/bibo/>
	dn:usesSchema <http://xmlns.com/foaf/0.1/> ;
	dn:usesSchema <http://www.w3.org/2004/02/skos/core#> .

:topicsSet void:entities "1500"^^xsd:int .

---


"The data sources used by Rexplore offer in most cases only the name of the author’s affiliation 
(e.g., Universities, Research Labs, Hospitals), which is usually derived from parsing research 
papers and thus it is simply treated as a string. 
The procedure uses initially Wikipedia to retrieve a ‘standard’ identifier for the affiliation and then 
searches for the location associated with the affiliation in DBpedia. If the latter search is unsuccessful, 
then the Wikipedia page is parsed for the tag “location” from which city and country are extracted using a 
set of heuristic rules. After recovering information about the city or the country, the affiliation is mapped 
to the correct GeoNames ID. If the search for affiliation and/or location in Wikipedia/DBpedia fails, then the 
affiliation name is stripped of a set of typical terms, such as “university”, “college” or “hospital”, and the 
remaining string is searched for in the GeoNames database. This simple method provided good results, allowing 
us to correctly map disambiguated affiliations to GeoNames in about 85% of the cases."

0) Have the affiliation as string
1) Retrieve standard identifier using wikipedia
2) Search the location of the affiliation in dbpedia, or
3) Search the location of the affiliation in the wikipedia page
4) Map the location to a GeoNames ID
5) Or simplify the affiliation name and search it in the GeoNames database the ID

---

@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix dn: <http://purl.org/datanode/ns/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:affiliationsStrings
	dn:isSectionOf :corpusOfPublications .
:affiliationsIdentifiers
	dn:processedFrom :affiliationsStrings ;
	dn:extractedFrom :Wikipedia .
:locationsFromDBPedia
	dn:isSelectionOf :DBPedia ;
	dn:hasIdentifiers :affiliationsIdentifiers .
:locationsFromWikipedia
	dn:extractedFrom :Wikipedia ;
	dn:hasIdentifiers :affiliationsIdentifiers .
:simplifiedLocationsNames
	dn:processedFrom [ dn:isSelectionOf :affiliationsStrings ] .
:locationsNames
	dn:hasPart :locationsFromDBPedia ;
	dn:hasPart :simplifiedLocationsNames ;
	dn:hasPart :locationsFromWikipedia .
:locations
	dn:isSelectionOf :Geonames ;
	dn:processedFrom :locationsNames .



---

"Rexplore takes advantage of the Klink-generated OWL knowledge base by considering every publication tagged with 
topic T1 to be also about topic T2, if T2 is broaderGeneric than T1, or relatedEquivalent to T1 "

0) Rexplore takes advantage of the OWL ontology
1) Every publication tagged with topic T1 is also tagged with topic T2 if T2 is broaderGeneric than T1 or relatedEquivalent to T1

---
@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix dn: <http://purl.org/datanode/ns/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:ontology
	dn:hasSection :transitiveSection .
:transitiveSection
	 dn:hasVocabulary [ dn:describes :relatedEquivalent ; dn:describes :broaderGeneric ] .
:aboutT1T2
	dn:describes :T1 ;
	dn:describes :T2 ;
	dn:isPortionOf :transitiveSection .
:knowledgeBase 
	dn:hasPart :ontology .
:publicationTags
	dn:isSectionOf :knowledgeBase .
:T1publications
	dn:hasSection [ dn:describes :T1 ; dn:isPortionOf :aboutT1T2 ] ;
	dn:isSelectionOf :publicationTags .
:T2publications
	dn:hasSection [ dn:describes :T2 ; dn:isPortionOf :aboutT1T2 ] ;
	dn:isSelectionOf :publicationTags .
:T1T2publications
	dn:isSelectionOf :publicationTags ;
	dn:isInferenceOf :ontology ;
	dn:hasPortion [ dn:isPortionOf :T1publications ] ;
	dn:hasPortion [ dn:isPortionOf :T2publications ] .

---

"Rexplore is able to visualize different topic trends: 1) publication trends, 2) author trends and 3) migration trends. 
The first two are the number of publications or authors associated with a semantically enriched topic on a timeline. 
The latter is defined as the number of estimated migrations between two topics and is computed by analyzing
the shifting in authors’ interest [...]"

0) Visualized information include publication trends, author trends and migration trends
1) publication trends is the number of publications associated with a semantically enriched topic on a timeline
2) author trends is the number of authors associated with a semantically enriched topic on a timeline
3) migration trends is the number of estimated migrations between two topics computed by analyzing the shifting in authors' interest

---

@prefix dbpedia: <http://dbpedia.org/resource/> .
@prefix dn: <http://purl.org/datanode/ns/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> . 
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> . 
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

:topics
	dn:hasPortion :aTopic .
:topics dn:isDescribedBy :knowledgeBase .
:time dn:isDescribedBy :knowledgeBase .
:authors  dn:isDescribedBy :knowledgeBase .
:publicationTags dn:isPortionOf :knowledgeBase .
:publications dn:isDescribedBy :publicationTags .
:publicationTrends
	dn:isStatisticOf [ dn:isPortionOf :publicationTags ; dn:hasSection [ dn:describes :publications, :aTopic, :time ] ] .
:authorTrends
	dn:isStatisticOf [ dn:isPortionOf :publicationTags ; dn:hasSection [ dn:describes :authors, :aTopic, :time ] ] .
:migrationTrends
	dn:isInterpretationOf [ dn:isPortionOf :publicationTags ; dn:hasSection [ dn:describes :aTopic, :topics, :time ] ] .
:topicTrends
	dn:hasPart :publicationTrends, :authorTrends, :migrationTrends . 
	
---

"Every author in Rexplore has a personal page which includes i) general bio information, ii) author’s scores according 
to different bibliometric measures, iii) topic analysis, iv) co-author analysis, v) pattern analysis, and vi) graph view. 
The page offers the possibility of deploying more than 20 different charts to plot each metric as a function of time."

0) 

---

---

"[...]  both the topic and author analysis interfaces offer the possibility of focusing on specific 
combinations of facets, in order to allow the users to navigate/retrieve data according to specific dimensions. 
For example, authors can be filtered by 1) name or a part of it, 2) career range (that is the time from the first published work), 
3) topics of interest and 4) venues in which they published. Both venue and topic fields accept multiple values, 
which can be combined using logical connectives. Hence it is easy to formulate complex queries, e.g., to retrieve career-young authors, 
who have worked in both “Semantic Web” and “Social Networks”, and have published in ISWC.
The results can be ranked by a variety of metrics that, for author-centric searches, include: 
1) number of publications, 2) number of citations, 3) H-Index, 4) G-Index, 5) HT-Index, 6) GT-Index, 7) number of publications/citations 
in a topic or set of topics, 8) number of publications/citations in a venue or set of venues. 
[...] HT-Index and GT-Index are based on the standard G-Index and H-Index, however they are normalized by the number 
of average citations in each topic. "

0) ...

---

---

"The graph view  [...] takes as input one or multiple authors and displays their relations allowing 
the user to choose among a variety of types of links, ranking criteria, and filters. 
[...] co-publication, co-citation, topic similarity, temporal topic similarity, 
publication pattern similarity and citation pattern similarity."

0) ...

---

---

