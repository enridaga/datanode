@prefix :      <http://purl.org/datanode/ns/> .
@prefix schema: <http://schema.org/> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix voaf:  <http://purl.org/vocommons/voaf#> .
@prefix prov:  <http://www.w3.org/ns/prov#> .
@prefix dcat:  <http://www.w3.org/ns/dcat#> .
@prefix dctype: <http://purl.org/dc/dcmitype/> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix void:  <http://rdfs.org/ns/void#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix dq:    <http://purl.org/linked-data/cube#> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix dcterms: <http://purl.org/dc/terms/> .

:optimizedFrom  a           owl:ObjectProperty ;
        rdfs:label          "optimized from"@end ;
        rdfs:subPropertyOf  :processedFrom , :overlappingCapabilityWith ;
        owl:inverseOf       :optimizedInto .

:disjointPortionWith  a     owl:SymmetricProperty ;
        rdfs:label          "disjoint portion with"@en ;
        rdfs:subPropertyOf  :disjointPartWith , :differentPopulationFrom .

:links  a                   owl:ObjectProperty ;
        rdfs:comment        "A data node links to other data using specific tecniques known in the context of Linked Data (like rdfs:seeAlso or owl:sameAs)."@en ;
        rdfs:label          "links"@en ;
        rdfs:subPropertyOf  :references , :overlappingPopulationWith ;
        skos:note           "It would be interesting to have a taste of other ways of doing similar links in other context then Linked Data."@en .

:hasChange  a               owl:InverseFunctionalProperty , owl:ObjectProperty ;
        rdfs:comment        "some data has some other as a change to come"@en ;
        rdfs:label          "has change"@en ;
        rdfs:subPropertyOf  :hasUpdate .

:hasComputation  a           owl:ObjectProperty ;
        rdfs:label           "has computation"@en ;
        rdfs:subPropertyOf   :processedInto ;
        dcterms:description  "<p>Relates a datanode to another that is the result of some computation on its data.</p>" .

:isPartOf  a                owl:TransitiveProperty ;
        rdfs:label          "is part of"@en ;
        rdfs:subPropertyOf  :overlappingPopulationWith ;
        owl:inverseOf       :hasPart .

:hasDatatypes  a            owl:ObjectProperty ;
        rdfs:comment        "Relates a datanode to the vocabulary of datatypes used in it."@en ;
        rdfs:label          "has datatypes"@en ;
        rdfs:subPropertyOf  :hasVocabulary .

:metadata  a                 owl:ObjectProperty ;
        rdfs:comment         "A data node has another data node as metadata."@en ;
        rdfs:label           "metadata" ;
        rdfs:subPropertyOf   :relatedWith ;
        dcterms:description  "<p>This is used to relate a data node to its metadata.</p>" ;
        owl:inverseOf        :about .

:hasInference  a             owl:ObjectProperty ;
        rdfs:label           "has inference"@en ;
        rdfs:subPropertyOf   :hasInterpretation ;
        dcterms:description  "<p>Relates a datanode to another including a set of logical inferences deduced from the first.</p>" .

:datatypesOf  a             owl:ObjectProperty ;
        rdfs:comment        "Relates a vocabulary of datatypes to the datanode that uses them."@en ;
        rdfs:label          "datatypes of"@en ;
        rdfs:subPropertyOf  :isVocabularyOf ;
        owl:inverseOf       :hasDatatypes .

:adjacentTo  a               owl:SymmetricProperty , owl:TransitiveProperty , owl:ObjectProperty ;
        rdfs:comment         "To relate a data node to any of their adjacent data node."@en ;
        rdfs:label           "adjacent to"@en ;
        rdfs:subPropertyOf   :relatedWith ;
        dcterms:description  "<p>This property basically represents the proximity of some data to other. Two parts of the same dataset are adjacents each other.</p>" .

:isUpdatedVersionOf  a      owl:ObjectProperty ;
        rdfs:label          "updated version of"@en ;
        rdfs:subPropertyOf  :nextVersionOf , :isUpdateOf ;
        owl:inverseOf       :hasUpdatedVersion .

:isDerivationOf  a           owl:ObjectProperty ;
        rdfs:label           "is derivation of"@en ;
        rdfs:subPropertyOf   :relatedWith ;
        dcterms:description  "<p>Is this property transitive? (No)</p>" , "<p>This relation indicates that a data node is the origin of another, in the sense that the second have been produced using the first as information source.</p>" .

:previousVersionOf  a       owl:InverseFunctionalProperty ;
        rdfs:label          "previous version of"@en ;
        rdfs:subPropertyOf  :olderVersionOf ;
        owl:inverseOf       :nextVersionOf .

:hasDependency  a           owl:ObjectProperty ;
        rdfs:comment        "A datanode needs another to be used or interpreted."@en ;
        rdfs:label          "has dependency"@en ;
        rdfs:subPropertyOf  :references ;
        skos:note           "The concept of dependency is here considered as to be expressed within the datanode (it is subproperty of references). Is this really a requirement?" .

:isUpdateOf  a              owl:ObjectProperty ;
        rdfs:comment        "A data node that is meant to improve the currency of another."@en ;
        rdfs:label          "is update of"@en ;
        rdfs:subPropertyOf  :sharesInterpretationWith ;
        owl:inverseOf       :hasUpdate .

:references  a               owl:ObjectProperty ;
        rdfs:label           "references"@en ;
        rdfs:subPropertyOf   :sharesInterpretationWith ;
        dcterms:description  "<p>It looks like there could be a more generic property here, which refer to the fact of sharing some signatures (identifiers), without assuming an order or direction of the reference. Two data nodes may simply use the same identifier independently from the intention of making a reference to anything else (then the identifier itself). Does this make sense?</p>" , "<p>The subject of this property includes a mention to something which is (included in) another data node. <br/> Talking about RDF datasets, this refer to the mention of a URI belonging to another dataset. For example, a dataset about employees could mention a Geonames location.</p>" .

:processedFrom  a           owl:ObjectProperty ;
        rdfs:label          "processed from"@en ;
        rdfs:subPropertyOf  :isDerivationOf ;
        owl:inverseOf       :processedInto .

:hasTypes  a                owl:ObjectProperty ;
        rdfs:comment        "Relates a data node to the vocabulary of the types used."@en ;
        rdfs:label          "has types"@en ;
        rdfs:subPropertyOf  :hasVocabulary .

:refactoredInto  a           owl:ObjectProperty ;
        rdfs:label           "refactored into"@en ;
        rdfs:subPropertyOf   :processedInto ;
        dcterms:description  "<p>Refactoring is transforming to make it simpler, optimized and more efficient for a target task.</p>" .

:isSelectionOf  a           owl:ObjectProperty ;
        rdfs:label          "is selection of"@en ;
        rdfs:subPropertyOf  :isPartOf , :isDerivationOf ;
        owl:inverseOf       :hasSelection .

:isCacheOf  a               owl:ObjectProperty ;
        rdfs:label          "is cache of"@en ;
        rdfs:subPropertyOf  :isSnapshotOf , :isStandInOf ;
        owl:inverseOf       :hasCache .

:hasSelection  a            owl:ObjectProperty ;
        rdfs:comment        "We represent here the outcome of the isolation of a part of a data node for a specific intent."@en ;
        rdfs:label          "has selection"@en ;
        rdfs:subPropertyOf  :hasDerivation , :hasPart .

:typesOf  a                 owl:ObjectProperty ;
        rdfs:comment        "Relates the vocabulary of the types used in a datanode to the datanode itself."@en ;
        rdfs:label          "types of"@en ;
        rdfs:subPropertyOf  :isVocabularyOf ;
        owl:inverseOf       :hasTypes .

skos:note  a    owl:AnnotationProperty .

:hasCopy  a                 owl:TransitiveProperty ;
        rdfs:label          "has copy"@en ;
        rdfs:subPropertyOf  :hasDerivation , :sameCapabilityAs .

:isExtractionOf  a          owl:ObjectProperty ;
        rdfs:label          "extraction of"@en ;
        rdfs:subPropertyOf  :isInterpretationOf ;
        owl:inverseOf       :hasExtraction .

:hasIdentifiers  a           owl:ObjectProperty ;
        rdfs:label           "has identifiers"@en ;
        rdfs:subPropertyOf   :hasSection ;
        dcterms:description  "<p>Relates a datanode to the collection of the identifiers of its population.</p>" .

:attachedTo  a               owl:ObjectProperty ;
        rdfs:comment         "Data are attached to data for some reason"@en ;
        rdfs:label           "attached to"@en ;
        rdfs:subPropertyOf   :adjacentTo ;
        dcterms:description  "This, along with its inverse \"haveAttached\" , are considered to model the \"physical\" dependency between data. You need to have access to the first in order to access the second, for example. An obvious example is an email and its attachments."@en ;
        owl:inverseOf        :hasAttached .

:hasAttached  a             owl:ObjectProperty ;
        rdfs:comment        "Data have attached other data for some reason"@en ;
        rdfs:label          "has attached"@en ;
        rdfs:subPropertyOf  :adjacentTo .

:disjointCapabilityWith
        a                   owl:SymmetricProperty ;
        rdfs:label          "disjoint capability"@en ;
        rdfs:subPropertyOf  :differentVocabularyFrom , :differentPopulationFrom .

:isStatisticOf  a           owl:ObjectProperty ;
        rdfs:label          "is statistic of"@en ;
        rdfs:subPropertyOf  :describes , :isComputationOf ;
        owl:inverseOf       :hasStatistic .

:hasObfuscated  a            owl:ObjectProperty ;
        rdfs:label           "has obfuscated substitute"@en ;
        rdfs:subPropertyOf   :hasAnonymized ;
        dcterms:description  "<p>Relates a datanode to another that is the result of a process that makes the information non interpretable. The resulting datanode is meant to play the role of its origin in the application. A simple example are hash functions.</p>" ;
        owl:inverseOf        :isObfuscatedOf .

:inconsistentWith  a              owl:SymmetricProperty , owl:ObjectProperty ;
        rdfs:comment              "A data node that should not be used together with another."@en ;
        rdfs:label                "inconsistent with"@en ;
        rdfs:subPropertyOf        :sharesInterpretationWith ;
        dcterms:description       "<p>It can be the case that a single data node is corrupted to some respect. It can then be marked to be inconsistent with itself.</p>" ;
        owl:propertyDisjointWith  :consistentWith ;
        skos:note                 "<p>We intend consistency in a general sense: two data nodes are inconsistent because they do not agree.</p>" .

:isSectionOf  a             owl:TransitiveProperty ;
        rdfs:label          "is section of"@en ;
        rdfs:subPropertyOf  :isPartOf ;
        owl:inverseOf       :hasSection .

:isPortionOf  a             owl:TransitiveProperty ;
        rdfs:label          "is portion of"@en ;
        rdfs:subPropertyOf  :isPartOf .

:hasSnapshot  a             owl:ObjectProperty ;
        rdfs:comment        "A copy of a data node in a specific time point"@en ;
        rdfs:label          "has snapshot"@en ;
        rdfs:subPropertyOf  :versionOf , :hasCopy .

dcterms:creator  a  owl:AnnotationProperty .

:isAdditionOf  a            owl:ObjectProperty ;
        rdfs:label          "is addition of"@en ;
        rdfs:subPropertyOf  :isChangeOf ;
        owl:inverseOf       :hasAddition .

:hasStatistic  a             owl:ObjectProperty ;
        rdfs:label           "has statistic"@en ;
        rdfs:subPropertyOf   :describedBy , :hasComputation ;
        dcterms:description  "<p>Statistics are at the same time computations and metadata of a source datanode.</p>" .

:isCopyOf  a                owl:TransitiveProperty ;
        rdfs:label          "is copy of"@en ;
        rdfs:subPropertyOf  :isDerivationOf , :sameCapabilityAs ;
        owl:inverseOf       :hasCopy .

:overlappingVocabularyWith
        a                    owl:ObjectProperty ;
        rdfs:label           "overlapping vocabulary with"@en ;
        rdfs:subPropertyOf   :overlappingCapabilityWith , :sharesInterpretationWith ;
        dcterms:description  "<p>Two datanodes share a set of vocabulary terms.</p>" .

:redundantWith  a           owl:TransitiveProperty ;
        rdfs:label          "redundant with"@en ;
        rdfs:subPropertyOf  :overlappingPopulationWith , :overlappingVocabularyWith .

:hasAttributes  a            owl:ObjectProperty ;
        rdfs:comment         "Relates data to the attributes used."@en ;
        rdfs:label           "has attributes"@en ;
        rdfs:subPropertyOf   :hasDescriptors ;
        dcterms:description  "<p>We relate with this property a data node to a collection of attributes used in it. We distinguish attributes from relations because the first does not qualify the range entity but only the domain entity (saying that a person is 1.82m tall does not change our knowledge about 1.82m).</p>" .

:processedInto  a           owl:ObjectProperty ;
        rdfs:comment        "A data node is processed (transformed) to obtain another one."@en ;
        rdfs:label          "processed into"@en ;
        rdfs:subPropertyOf  :hasDerivation .

:samePopulationAs  a        owl:TransitiveProperty ;
        rdfs:label          "same population"@en ;
        rdfs:subPropertyOf  :overlappingPopulationWith .

:hasAddition  a             owl:ObjectProperty ;
        rdfs:comment        "some data is the addition-update of some other"@en ;
        rdfs:label          "has addition"@en ;
        rdfs:subPropertyOf  :hasChange .

:Datanode  a          rdfs:Class , owl:Class ;
        rdfs:comment  "A data node is an underspecified data object, in a network of data nodes."@en ;
        rdfs:label    "A data node"@en .

:consistentWith  a           owl:SymmetricProperty , owl:ObjectProperty ;
        rdfs:comment         "A data node that can (should) be used together with another. "@en ;
        rdfs:label           "consistent with"@en ;
        rdfs:subPropertyOf   :sharesInterpretationWith ;
        dcterms:description  "<p>It can be the case that a single data node is verified to be correct. It can then be marked to be consistent with itself.</p>" , "<p>We intend consistency in a general sense: two data nodes are consistent because they agree (ie, they do not disagree...).</p>" .

:cleanedFrom  a             owl:ObjectProperty ;
        rdfs:label          "cleaned from"@end ;
        rdfs:subPropertyOf  :overlappingCapabilityWith , :processedFrom ;
        owl:inverseOf       :cleanedInto .

:isSnapshotOf  a            owl:ObjectProperty ;
        rdfs:label          "is snapshot of"@en ;
        rdfs:subPropertyOf  :versionOf , :isCopyOf ;
        owl:inverseOf       :hasSnapshot .

:usesSchema  a               owl:ObjectProperty ;
        rdfs:comment         "Relates a data node to another used as schema."@en ;
        rdfs:label           "uses schema"@en ;
        rdfs:subPropertyOf   :references ;
        dcterms:description  "<p>We distinguish the schema and the vocabulary as follows. A vocabulary is the enumeration of a set of terms. A schema organize a set of terms in a system of some sort. A list of body parts is not the anatomy of a body. The furniture is not an interior design model.</p>" , "<p>The second is intended to be a self contained model that is (even partly) used in the data node.</p>" .

:relationsOf  a             owl:ObjectProperty ;
        rdfs:label          "relations of"@en ;
        rdfs:subPropertyOf  :descriptorsOf ;
        owl:inverseOf       :hasRelations .

:isStandInOf  a             owl:ObjectProperty ;
        rdfs:label          "is stand-in of"@en ;
        rdfs:subPropertyOf  :overlappingCapabilityWith , :isDerivationOf ;
        owl:inverseOf       :hasStandIn .

:versionOf  a                owl:SymmetricProperty , owl:ObjectProperty ;
        rdfs:label           "version"@en ;
        rdfs:subPropertyOf   :overlappingCapabilityWith ;
        dcterms:description  "<p>Use this property to represent a temporal relation between two data nodes that are meant to be the same at a different point in time. The property is symmetric and does not specify a direction.<br/>This property is not transitive. While it can be argued that the identity of something tracked temporarly should not change, thus implying transitivity, we want support the case when a data note has more then one following version (branching). Avoiding transitivity allows it.</p>" .

:schemaUsedBy  a            owl:ObjectProperty ;
        rdfs:label          "schema used by"@en ;
        rdfs:subPropertyOf  :referencedBy ;
        owl:inverseOf       :usesSchema ;
        skos:note           "Does being a schema imply being a dependency?"@en .

:sharesInterpretationWith
        a                   owl:SymmetricProperty , owl:TransitiveProperty ;
        rdfs:comment        "This relates a data node to any datanode that can support its interpretation. They connected nodes might be in the same interpretation model."@en ;
        rdfs:label          "shares interpretation with"@en ;
        rdfs:subPropertyOf  :relatedWith .

:isExampleOf  a             owl:ObjectProperty ;
        rdfs:label          "example of"@en ;
        rdfs:subPropertyOf  :isSelectionOf ;
        owl:inverseOf       :hasExample .

:hasRelations  a            owl:ObjectProperty ;
        rdfs:comment        "Relates a datanode to another enumerating the set of relations used in it."@en ;
        rdfs:label          "has relations"@en ;
        rdfs:subPropertyOf  :hasDescriptors .

:newerVersionOf  a          owl:TransitiveProperty ;
        rdfs:label          "newer version of"@en ;
        rdfs:subPropertyOf  :versionOf .

:optimizedInto  a           owl:ObjectProperty ;
        rdfs:comment        "A datanode have been optimized into a new one, to amplify existing capabilities."@en ;
        rdfs:label          "optimized into"@end ;
        rdfs:subPropertyOf  :processedInto , :overlappingCapabilityWith .

:hasAnonymized  a            owl:ObjectProperty ;
        rdfs:label           "has anonymized substitute"@en ;
        rdfs:subPropertyOf   :processedFrom , :isStandInOf ;
        dcterms:description  "<p>Relates a datanode to another that is the result of a process that removes the possibility for a person to be identified from the given information. The resulting datanode is meant to play the role of its origin in the application.</p>" ;
        owl:inverseOf        :isAnonymizedOf .

:hasPart  a                 owl:TransitiveProperty ;
        rdfs:comment        "To related a data node to another which is contained in it."@en ;
        rdfs:label          "has part"@en ;
        rdfs:subPropertyOf  :overlappingPopulationWith .

:hasAnnotation  a           owl:ObjectProperty ;
        rdfs:comment        "This relates a datanode to some metadata attached to it."@en ;
        rdfs:label          "has annotation"@en ;
        rdfs:subPropertyOf  :metadata , :hasAttached .

:referencedBy  a            owl:ObjectProperty ;
        rdfs:label          "referenced by"@en ;
        rdfs:subPropertyOf  :sharesInterpretationWith ;
        owl:inverseOf       :references .

:isSummarizationOf  a       owl:ObjectProperty ;
        rdfs:label          "is summarization of"@en ;
        rdfs:subPropertyOf  :isDerivationOf ;
        owl:inverseOf       :hasSummarization .

:hasReification  a           owl:ObjectProperty ;
        rdfs:label           "has reification"@en ;
        rdfs:subPropertyOf   :processedInto ;
        dcterms:description  "<p>This property refer to the semantic of reification in RDF.</p>" .

:hasSummarization  a        owl:ObjectProperty ;
        rdfs:label          "has summarization"@en ;
        rdfs:subPropertyOf  :hasDerivation .

:differentVocabularyFrom
        a                    owl:SymmetricProperty ;
        rdfs:label           "different vocabulary from"@en ;
        rdfs:subPropertyOf   :differentCapabilityFrom ;
        dcterms:description  "<p>Two datanodes do not share any set of vocabulary terms.</p>" .

:hasDescriptors  a           owl:ObjectProperty ;
        rdfs:comment         "A descriptor is an element used to qualify a value. Relates a data node to the collection of the descriptors used (being it a data node, obviously)."@en ;
        rdfs:label           "has descriptors"@en ;
        rdfs:subPropertyOf   :hasVocabulary ;
        dcterms:description  "<p>We choose the term descriptor to indicate generically the element used to bind/map/qualify a value with respect to its entity. Practically, this term maps to <ul><li>\"Field\" in Object Oriented Programming; <li>\"Predicate\" in First Order Logic <li>Column identifier (Attribute) in Relation Database terminology <li>rdf:Property in the Resource Description Framework </ul></p>" .

:cleanedInto  a             owl:ObjectProperty ;
        rdfs:comment        "Clean to make emerge potential capabilities. We intend cleaning in a broad sense, including activities like fixes in the syntax of the data or pruning of unfitting data, with relation to a target task."@en ;
        rdfs:label          "cleaned into"@end ;
        rdfs:subPropertyOf  :processedInto , :overlappingCapabilityWith .

:hasSample  a                owl:ObjectProperty ;
        rdfs:label           "has sample"@en ;
        rdfs:subPropertyOf   :hasPortion ;
        dcterms:description  "<p>Relates a datanode to an excerpt of its population, with some, non specified, attributes.</p>" .

:hasUpdate  a                owl:ObjectProperty ;
        rdfs:comment         "A data node may be related to another that improves its currency."@en ;
        rdfs:label           "has update"@en ;
        rdfs:subPropertyOf   :sharesInterpretationWith ;
        dcterms:description  "<p>Update is considered in a general meaning of having a role meant to better reflect the referred world.</p>" .

:hasExample  a              owl:ObjectProperty ;
        rdfs:label          "has example"@en ;
        rdfs:subPropertyOf  :hasSelection .

:sameCapabilityAs  a         owl:TransitiveProperty ;
        rdfs:label           "same capability as"@en ;
        rdfs:subPropertyOf   :sameVocabularyAs , :samePopulationAs ;
        dcterms:description  "<p>Having the same capability implies having the same population and the same vocabulary. In colloquial terms, the same data is described in the same terms.</p>" .

:hasUpdatedVersion  a       owl:ObjectProperty ;
        rdfs:comment        "A new version of a data node in a specific time point that is meant to substitute it."@en ;
        rdfs:label          "updated version"@en ;
        rdfs:subPropertyOf  :previousVersionOf , :hasUpdate .

:isSampleOf  a              owl:ObjectProperty ;
        rdfs:label          "is sample of"@en ;
        rdfs:subPropertyOf  :isPortionOf ;
        owl:inverseOf       :hasSample .

:isInferenceOf  a           owl:ObjectProperty ;
        rdfs:label          "is inference of"@en ;
        rdfs:subPropertyOf  :isInterpretationOf ;
        owl:inverseOf       :hasInference .

:overlappingCapabilityWith
        a                    owl:SymmetricProperty ;
        rdfs:label           "overlapping capability with"@en ;
        rdfs:subPropertyOf   :relatedWith ;
        dcterms:description  "<p>Two data nodes have similar potential, their domains overlap.</p>" ;
        skos:note            "If the capability is the location, two version might not have the same location. We might want to specify a number of well known capabilities - format, location, meta-model, accessMethod, ... . Might this allow more inferences than the ones we can do now?"@en , "Similar relations might refer to other features, being it structural (they share schema elements), physical (they are both in XML) or related to the domain (they both talk about Music Artists) - just to make few examples.. We might want to specify other kind of features, covering: ownership (sameOwner), meta-model (sameMetaModel), syntax (sameSyntax), accessMethod (sameAccessMethod), license (compatibleLicense, sameLicense), policies (?)."@en , "This relation is needed to generically express comparison of data nodes with relation to the domain covered."@en .

:differentPopulationFrom
        a                    owl:SymmetricProperty ;
        rdfs:label           "different population from"@en ;
        rdfs:subPropertyOf   :differentCapabilityFrom ;
        dcterms:description  "<p>Two datanodes do not share any population.</p>" .

:       a                    owl:Ontology ;
        rdfs:label           "The Datanode Vocabulary" ;
        dcterms:creator      "enridaga - enricodaga@gmail.com" ;
        dcterms:description  "<p>Naming conventions: <ol><li>camel case <li>has[Noun]/is[Noun]Of <li>[present tense transitive verb]/[past tense verb]By,To,From,... <li>has[Past tense verb]/[past tense verb]To,From,... </ol></p>" ;
        owl:versionInfo      "0.3" ;
        skos:note            "\n<p>Changelog 0.4</p>\n<ol>\n<li>A :isObfuscatedOf \n</ol>\n<p>Changelog 0.3</p>\n<ol>\n<li>D :isUpdatedVersionOf rdfs:subPropertyOf :olderVersionOf\n<li>D :hasUpdatedVersion rdfs:subPropertyOf :newerVersionOf\n<li>A :isUpdatedVersionOf rdfs:subPropertyOf :nextVersionOf\n<li>A :hasUpdatedVersion rdfs:subPropertyOf :previousVersionOf\n<li>A :versionOf :subPropertyOf :overlappingCapabilityWith\n<li>A :remodelledFrom rdfs:subPropertyOf :overlappingPopulationWith ;\n<li>A :remodelledTo rdfs:subPropertyOf :overlappingPopulationWith ;\n<li>A :isPartOf rdfs:subPropertyOf :overlappingPopulationWith, :overlappingVocabularyWith\n<li>A :duplicate a owl:TransitiveProperty\n<li>A :isCopyOf rdfs:subPropertyOf :sameCapabilityAs\n<li>A :links rdfs:subPropertyOf :overlappingPopulationWith\n<li>A :linkedTo rdfs:subPropertyOf :overlappingPopulationWith\n<li>A \n:sharesInterpretationWith\n\ta owl:TransitiveProperty, owl:SymmetricProperty ;\n\trdfs:label \"shares interpretation with\"@en ;\n\trdfs:comment \"This relates a data node to any datanode that can support its interpretation. They connected nodes might be in the same interpretation model.\"@en .\n:isUpdateOf rdfs:subPropertyOf :sharesInterpretationWith .\n:hasUpdate rdfs:subPropertyOf :sharesInterpretationWith .\n:overlappingPopulation rdfs:subPropertyOf :sharesInterpretationWith .\n:overlappingVocabulary rdfs:subPropertyOf :sharesInterpretationWith .\n:inconsistentWith rdfs:subPropertyOf :sharesInterpretationWith .\n:consistentWith rdfs:subPropertyOf :sharesInterpretationWith .\n:references rdfs:subPropertyOf :sharesInterpretationWith .\n:referencedBy rdfs:subPropertyOf :sharesInterpretationWith .\n:hasVocabulary rdfs:subPropertyOf :sharesInterpretationWith .\n:isVocabularyOf rdfs:subPropertyOf :sharesInterpretationWith .\n<li>Alignments with prov, void and dcat\n</ol> " .

:overlappingPopulationWith
        a                    owl:ObjectProperty ;
        rdfs:label           "overlapping population with"@en ;
        rdfs:subPropertyOf   :overlappingCapabilityWith , :sharesInterpretationWith ;
        dcterms:description  "<p>Two datanodes share some population.</p>" .

:isAnonymizedOf  a          owl:ObjectProperty ;
        rdfs:label          "is anonymized substitute of"@en ;
        rdfs:subPropertyOf  :processedInto , :hasStandIn ;
        owl:inverseOf       :hasAnonymized .

:sameVocabularyAs  a        owl:TransitiveProperty ;
        rdfs:label          "same vocabulary"@en ;
        rdfs:subPropertyOf  :overlappingVocabularyWith .

:isAnnotationOf  a          owl:ObjectProperty ;
        rdfs:comment        "When an attached datanode is also metadata about what it is attached to... it is an annotation."@en ;
        rdfs:label          "is annotation of"@en ;
        rdfs:subPropertyOf  :about , :attachedTo ;
        owl:inverseOf       :hasAnnotation .

:disjointSectionWith  a     owl:SymmetricProperty ;
        rdfs:comment        "Data can be cut in sections according to specific attributes."@en ;
        rdfs:label          "disjoint section with"@en ;
        rdfs:subPropertyOf  :disjointPartWith , :differentVocabularyFrom .

:isVocabularyOf  a           owl:ObjectProperty ;
        rdfs:label           "is vocabulary of"@en ;
        rdfs:subPropertyOf   :sharesInterpretationWith ;
        dcterms:description  "<p>This datanode enumerate a set of terms that are all used by the related datanode.</p>" ;
        owl:inverseOf        :hasVocabulary .

:combinedIn  a              owl:ObjectProperty ;
        rdfs:comment        "A data node that have been combined (with something else) in a given data node."@en ;
        rdfs:label          "combined in"@en ;
        rdfs:subPropertyOf  :hasDerivation .

:descriptorsOf  a           owl:ObjectProperty ;
        rdfs:comment        "This property relates a datanode of descriptors to the datanode that uses them."@en ;
        rdfs:label          "descriptors of"@en ;
        rdfs:subPropertyOf  :isVocabularyOf ;
        owl:inverseOf       :hasDescriptors .

:isDeletionOf  a            owl:ObjectProperty ;
        rdfs:label          "is deletion of"@en ;
        rdfs:subPropertyOf  :isChangeOf ;
        owl:inverseOf       :hasDeletion .

:hasPortion  a               owl:TransitiveProperty ;
        rdfs:label           "has portion"@en ;
        rdfs:subPropertyOf   :hasPart ;
        dcterms:description  ":hasPortion is used to capture the relation with a subset of the data."@en ;
        owl:inverseOf        :isPortionOf .

:olderVersionOf  a          owl:TransitiveProperty ;
        rdfs:label          "older version of"@en ;
        rdfs:subPropertyOf  :versionOf ;
        owl:inverseOf       :newerVersionOf .

:describedBy  a              owl:ObjectProperty ;
        rdfs:comment         "Data have other data as description."@en ;
        rdfs:label           "described by"@en ;
        rdfs:subPropertyOf   :metadata ;
        dcterms:description  "<p>This relates a datanode to any datanode being an object in its representation.</p>" ;
        owl:inverseOf        :describes .

:disjointPartWith  a        owl:SymmetricProperty ;
        rdfs:comment        "Two datanodes are adjacent parts of another. This property relates the two parts without specifying anything about their container. Can be used in conjunction with isPartOf to state that two parts do not overlap."@en ;
        rdfs:label          "disjoint part with"@en ;
        rdfs:subPropertyOf  :adjacentTo .

:isComputationOf  a         owl:ObjectProperty ;
        rdfs:label          "is computation of"@en ;
        rdfs:subPropertyOf  :processedFrom ;
        owl:inverseOf       :hasComputation .

:remodelledTo  a            owl:ObjectProperty ;
        rdfs:label          "remodelled to"@en ;
        rdfs:subPropertyOf  :processedInto , :samePopulationAs .

:hasExtraction  a            owl:ObjectProperty ;
        rdfs:label           "has extraction"@en ;
        rdfs:subPropertyOf   :hasInterpretation ;
        dcterms:description  "<p>Relates a datanode to another that formalize the information obtained as a result of an information extraction process, for example a data mining process.</p>" .

:attributesOf  a            owl:ObjectProperty ;
        rdfs:label          "attributes of"@en ;
        rdfs:subPropertyOf  :descriptorsOf ;
        owl:inverseOf       :hasAttributes .

:relatedWith  a              owl:ReflexiveProperty , owl:SymmetricProperty , owl:ObjectProperty ;
        rdfs:comment         "A data node is connected to another one."@en ;
        rdfs:domain          :Datanode ;
        rdfs:label           "related with"@en ;
        rdfs:range           :Datanode ;
        dcterms:description  "<p>This is the Top Property of Datanode.</p>" .

:duplicate  a                     owl:IrreflexiveProperty , owl:TransitiveProperty , owl:SymmetricProperty ;
        rdfs:label                "duplicate"@en ;
        rdfs:subPropertyOf        :sameCapabilityAs ;
        owl:disjointPropertyWith  :disjointCapabilityWith .

:isObfuscatedOf  a          owl:ObjectProperty ;
        rdfs:label          "is obfuscated substitute of"@en ;
        rdfs:subPropertyOf  :isAnonymizedOf ;
        owl:inverseOf       :hasObfuscated .

:describes  a                owl:ObjectProperty ;
        rdfs:comment         "A data node describes another."@en ;
        rdfs:label           "describes"@en ;
        rdfs:subPropertyOf   :about ;
        dcterms:description  "<p>This relates a datanode to any datanode being an object in its representation.</p>" .

:hasDerivation  a           owl:ObjectProperty ;
        rdfs:label          "has derivation"@en ;
        rdfs:subPropertyOf  :relatedWith ;
        owl:inverseOf       :isDerivationOf .

:remodelledFrom  a           owl:ObjectProperty ;
        rdfs:label           "remodelled from"@en ;
        rdfs:subPropertyOf   :processedFrom , :samePopulationAs ;
        dcterms:description  "<p>Remodelling refer to the translation of the data to another symbolic structure (model), while keeping the same interpretation.</p>" ;
        owl:inverseOf        :remodelledTo .

dcterms:description  a  owl:AnnotationProperty .

:nextVersionOf  a            owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:label           "next version of"@en ;
        rdfs:subPropertyOf   :newerVersionOf ;
        dcterms:description  "<p>Relates a datanode to another that is the direct next version.</p>" .

:combinationFrom  a         owl:ObjectProperty ;
        rdfs:comment        "A data node that is the result of the combination of another data node with something else."@en ;
        rdfs:label          "combination from"@en ;
        rdfs:subPropertyOf  :isDerivationOf ;
        owl:inverseOf       :combinedIn .

:differentCapabilityFrom
        a                    owl:SymmetricProperty ;
        rdfs:label           "different capability from"@en ;
        rdfs:subPropertyOf   :relatedWith ;
        dcterms:description  "<p>Two nodes have different potential. Two data nodes using different vocabularies or two copies of the same data in different places.</p>" ;
        skos:note            "(Similarly to :overlappingCapabilityWith) This relation is needed to generically express comparison of data nodes with relation to specific tasks."@en .

:hasDeletion  a              owl:ObjectProperty ;
        rdfs:comment         "A data node is the to-delete-information of some other. In other terms, it is the outdated information."@en ;
        rdfs:label           "has deletion"@en ;
        rdfs:subPropertyOf   :hasChange ;
        dcterms:description  "<p>Indicates a data node which includes information that is now old or outdated. We don't indicate it to be also a part, this is to discuss.</p>" .

:isInterpretationOf  a      owl:ObjectProperty ;
        rdfs:comment        "Some data emerge as the interpretation of other."@en ;
        rdfs:label          "is interpretation of"@en ;
        rdfs:subPropertyOf  :isDerivationOf ;
        owl:inverseOf       :hasInterpretation .

:refactoredFrom  a          owl:ObjectProperty ;
        rdfs:label          "refactored from"@en ;
        rdfs:subPropertyOf  :processedFrom ;
        owl:inverseOf       :refactoredInto .

:about  a                    owl:ObjectProperty ;
        rdfs:comment         "A data node is about another data node."@en ;
        rdfs:label           "about"@en ;
        rdfs:subPropertyOf   :relatedWith ;
        dcterms:description  "<p>A data node may be metadata about another.</p>" .

:identifiersOf  a           owl:ObjectProperty ;
        rdfs:label          "identifiers of"@en ;
        rdfs:subPropertyOf  :isSectionOf ;
        owl:inverseOf       :hasIdentifiers .

:hasStandIn  a               owl:ObjectProperty ;
        rdfs:comment         "Some data is a substitute of another, for specific reasons."@en ;
        rdfs:label           "has stand-in"@en ;
        rdfs:subPropertyOf   :overlappingCapabilityWith , :hasDerivation ;
        dcterms:description  "<p>Are we sure a stand-in is always a derivation?</p>" .

:isDependencyOf  a          owl:ObjectProperty ;
        rdfs:comment        "A datanode is required by another one in order for it to be used or interpreted."@en ;
        rdfs:label          "is dependency of"@en ;
        rdfs:subPropertyOf  :referencedBy ;
        owl:inverseOf       :hasDependency .

:isReificationOf  a         owl:ObjectProperty ;
        rdfs:label          "is reification of"@en ;
        rdfs:subPropertyOf  :processedFrom ;
        owl:inverseOf       :hasReification .

:hasCache  a                owl:ObjectProperty ;
        rdfs:label          "has cache"@en ;
        rdfs:subPropertyOf  :hasSnapshot , :hasStandIn .

:linkedBy  a                owl:ObjectProperty ;
        rdfs:comment        "A data node is linked by another using specific tecniques known in the context of Linked Data (like rdfs:seeAlso or owl:sameAs)."@en ;
        rdfs:label          "linked by"@en ;
        rdfs:subPropertyOf  :referencedBy , :overlappingPopulationWith ;
        owl:inverseOf       :links .

:isChangeOf  a              owl:FunctionalProperty , owl:ObjectProperty ;
        rdfs:comment        "some data is the coming change of some other"@en ;
        rdfs:label          "is change of"@en ;
        rdfs:subPropertyOf  :isUpdateOf ;
        owl:inverseOf       :hasChange .

:hasVocabulary  a            owl:ObjectProperty ;
        rdfs:comment         "Relates a data node to a datanode representing a set of names that are all used in it."@en ;
        rdfs:label           "has vocabulary"@en ;
        rdfs:subPropertyOf   :sharesInterpretationWith ;
        dcterms:description  "<p>The range of this property is a data node which enumerates a set of terms that are all used by the subject data node as identifiers (eventually to name structural elements, like attribute names or types).</p>" ;
        skos:note            "<p>When a data node :hasVocabulary another, we expect the latter to be the collection of terms used by the data node to name its properties and types.<br/>How to know if there is some term that is not part of that vocabulary? In other words, is it relevant to know whether a vocabulary is complete or not wrt some data?</p>" .

:hasSection  a               owl:TransitiveProperty ;
        rdfs:comment         "Data can be cut in sections according to specific attributes."@en ;
        rdfs:label           "has section"@en ;
        rdfs:subPropertyOf   :hasPart ;
        dcterms:description  "An example is the relation between a void:Dataset and a dataset being a specific void:propertyPartition."@en .

:hasInterpretation  a       owl:ObjectProperty ;
        rdfs:comment        "Some data is interpretated such to produce other data."@en ;
        rdfs:label          "has interpretation"@en ;
        rdfs:subPropertyOf  :hasDerivation .
